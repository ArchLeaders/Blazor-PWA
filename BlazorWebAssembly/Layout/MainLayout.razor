@using Blazored.LocalStorage
@using Toolbelt.Blazor.PWA.Updater

@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <PWAUpdater />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle" />
        <MudText Typo="Typo.h5" Class="ml-3">RACI Solutions</MudText>
        <MudSpacer />
        <MudIconButton @bind-Icon="@_themeModeIcon" Color="Color.Inherit" Edge="Edge.End" OnClick="ThemeToggle" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_isMenuOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudNavLink IconColor="Color.Primary" Icon="@Icons.Material.Filled.Home" Href="">Home</MudNavLink>
            <MudDivider />
            <MudNavLink Icon="@Icons.Material.Filled.Numbers" Href="counter">Counter</MudNavLink>
        </MudNavMenu>
        <MudSpacer />
        <MudNavMenu>
            <MudNavLink Icon="@Icons.Material.Filled.Info" Href="about">About</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    protected override async Task OnInitializedAsync()
    {
        _isDarkMode = await LocalStorage.GetItemAsync<bool?>(nameof(_isDarkMode))
            ?? true;

        await base.OnInitializedAsync();
    }

    private bool _isMenuOpen = true;

    private void DrawerToggle()
    {
        _isMenuOpen = !_isMenuOpen;
    }

    private bool _isDarkMode = true;
    private string _themeModeIcon = Icons.Material.Filled.LightMode;

    private async Task ThemeToggle()
    {
        _isDarkMode = !_isDarkMode;
        _themeModeIcon = _isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode;
        await LocalStorage.SetItemAsync(nameof(_isDarkMode), _isDarkMode);
    }
}